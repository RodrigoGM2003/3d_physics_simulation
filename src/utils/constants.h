#ifndef CONSTANTS_H
#define CONSTANTS_H

#include <cmath>

namespace utils {

constexpr float GOLDEN_RATIO = 1.618033;

const std::vector<int> icoOrder = {
    0, 2, 1, //F0
    0, 1, 3, //F1
    0, 3, 5, //F2
    0, 5, 4, //F3
    0, 4, 2, //F4
    2, 4, 8, //F5
    2, 8, 6, //F6
    2, 6, 1, //F7
    1, 6, 7, //F8
    1, 7, 3, //F9
    3, 7, 9, //F10
    3, 9, 5, //F11
    10, 4, 5, //F12
    10, 5, 9, //F13
    10, 9, 11, //F14
    10, 11, 8, //F15
    10, 8, 4, //F16
    11, 9, 7, //F17
    11, 7, 6, //F18
    11, 6, 8 //F19
};

const float unitIcoVertices[36] = {
    0, utils::GOLDEN_RATIO, 1,    //0
    0, utils::GOLDEN_RATIO, -1,   //1
    utils::GOLDEN_RATIO, 1, 0,    //2
    -utils::GOLDEN_RATIO, 1, 0,   //3
    1, 0, utils::GOLDEN_RATIO,    //4
    -1, 0, utils::GOLDEN_RATIO,  //5
    1, 0, -utils::GOLDEN_RATIO,   //6
    -1, 0, -utils::GOLDEN_RATIO, //7
    utils::GOLDEN_RATIO, -1, 0,   //8
    -utils::GOLDEN_RATIO, -1, 0,  //9
    0, -utils::GOLDEN_RATIO, 1,   //10
    0, -utils::GOLDEN_RATIO, -1   //11
};
const float sphereIcoVertices[180] = {
    0, 0.850651, 0.525731,    //0 F0
    0.850651, 0.525731, 0,    //2
    0, 0.850651, -0.525731,   //1

    0, 0.850651, 0.525731,    //0 F1
    0, 0.850651, -0.525731,   //1
    -0.850651, 0.525731, 0,   //3

    0, 0.850651, 0.525731,    //0 F2
    -0.850651, 0.525731, 0,   //3
    -0.525731, 0, 0.850651,  //5

    0, 0.850651, 0.525731,    //0 F3
    -0.525731, 0, 0.850651,  //5
    0.525731, 0, 0.850651,    //4

    0, 0.850651, 0.525731,    //0 F4
    0.525731, 0, 0.850651,    //4
    0.850651, 0.525731, 0,    //2

    0.850651, 0.525731, 0,    //2 F5
    0.525731, 0, 0.850651,    //4
    0.850651, -0.525731, 0,   //8

    0.850651, 0.525731, 0,    //2 F6
    0.850651, -0.525731, 0,   //8
    0.525731, 0, -0.850651,   //6

    0.850651, 0.525731, 0,    //2 F7
    0.525731, 0, -0.850651,   //6
    0, 0.850651, -0.525731,   //1

    0, 0.850651, -0.525731,   //1 F8
    0.525731, 0, -0.850651,   //6
    -0.525731, 0, -0.850651,  //7

    0, 0.850651, -0.525731,   //1 F9
    -0.525731, 0, -0.850651,  //7
    -0.850651, 0.525731, 0,   //3

    -0.850651, 0.525731, 0,   //3 F10
    -0.525731, 0, -0.850651,  //7
    -0.850651, -0.525731, 0,  //9

    -0.850651, 0.525731, 0,   //3 F11
    -0.850651, -0.525731, 0,  //9
    -0.525731, 0, 0.850651,   //5

    0, -0.850651, 0.525731,   //10 F12
    0.525731, 0, 0.850651,    //4
    -0.525731, 0, 0.850651,   //5

    0, -0.850651, 0.525731,   //10 F13
    -0.525731, 0, 0.850651,   //5
    -0.850651, -0.525731, 0,  //9

    0, -0.850651, 0.525731,   //10 F14
    -0.850651, -0.525731, 0,  //9
    0, -0.850651, -0.525731,  //11

    0, -0.850651, 0.525731,   //10 F15
    0, -0.850651, -0.525731,  //11
    0.850651, -0.525731, 0,   //8

    0, -0.850651, 0.525731,   //10 F16
    0.850651, -0.525731, 0,   //8
    0.525731, 0, 0.850651,    //4

    0, -0.850651, -0.525731,  //11 F17
    -0.850651, -0.525731, 0,  //9
    -0.525731, 0, -0.850651,  //7

    0, -0.850651, -0.525731,  //11 F18
    -0.525731, 0, -0.850651,  //7
    0.525731, 0, -0.850651,   //6

    0, -0.850651, -0.525731,  //11 F19
    0.525731, 0, -0.850651,   //6
    0.850651, -0.525731, 0    //8
};


const int SPHERE_SUBDIVISIONS = 1;

}


#endif